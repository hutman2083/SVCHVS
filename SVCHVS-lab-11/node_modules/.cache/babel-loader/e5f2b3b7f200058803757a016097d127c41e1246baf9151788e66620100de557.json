{"ast":null,"code":"var _jsxFileName = \"D:\\\\git\\\\SVCHVS-lab-11\\\\src\\\\components\\\\cards\\\\Cards.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$(),\n  _s3 = $RefreshSig$();\nimport './Cards.css';\nimport React, { createRef, useEffect, useState } from 'react';\nimport ClickAwayListener from '@mui/base/ClickAwayListener';\nimport dataJSON from \"./items.json\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet getData = () => {\n  localStorage.removeItem(\"items\");\n  localStorage.setItem(\"items\", JSON.stringify(dataJSON));\n};\ngetData();\nconst ADD_ITEM = 'ADD-ITEM';\nconst UPDATE_ITEM = 'UPDATE-ITEM';\nconst DELETE_ITEM = 'DELETE-ITEM';\nconst ItemForm = props => {\n  _s();\n  let items = JSON.parse(localStorage.getItem(\"items\"));\n  let addItemNameRef = /*#__PURE__*/React.createRef();\n  let addItemPriceRef = /*#__PURE__*/React.createRef();\n  let addItemImgRef = /*#__PURE__*/React.createRef();\n  let addItemCountRef = /*#__PURE__*/React.createRef();\n  const [disabled, setDisabled] = useState(true);\n  const [data, setData] = useState({\n    name: '',\n    isNameValid: false,\n    price: '',\n    isPriceValid: false,\n    img: '',\n    isImgValid: false,\n    count: '',\n    isCountValid: false\n  });\n  const [getId, setId] = useState(items.length);\n  let validateStringValue = value => {\n    return typeof value === \"string\" && value !== \"\";\n  };\n  let validateIntValue = value => {\n    value = parseInt(value);\n    return Number.isInteger(value);\n  };\n  let validateUrl = value => {\n    let httpRegex = /^https?:\\/\\/(?:www\\.)?[-a-zA-Z0-9@:%._\\+~#=]{1,256}\\.[a-zA-Z0-9()]{1,6}\\b(?:[-a-zA-Z0-9()@:%_\\+.~#?&\\/=]*)$/;\n    console.log(httpRegex.test(value));\n    return httpRegex.test(value);\n  };\n  let checkButtonForValidate = () => {\n    if (data.isNameValid && data.isPriceValid && data.isCountValid && data.isImgValid) {\n      setDisabled(false);\n    } else {\n      setDisabled(true);\n    }\n  };\n  let addItem = () => {\n    setId(getId => getId + 1);\n    items.push({\n      \"id\": getId,\n      \"name\": `${data.name}`,\n      \"price\": data.price,\n      \"img\": `${data.img}`,\n      \"count\": data.count\n    });\n    localStorage.setItem(\"items\", JSON.stringify(items));\n    setData({\n      name: '',\n      isNameValid: false,\n      price: '',\n      isPriceValid: false,\n      img: '',\n      isImgValid: false,\n      count: '',\n      isCountValid: false\n    });\n  };\n  let updateItem = id => {\n    for (let i = 0; i < items.length; i++) {\n      if (items[i].id === id) {\n        items[i] = {\n          \"id\": id,\n          \"name\": `${data.name}`,\n          \"price\": data.price,\n          \"img\": `${data.img}`,\n          \"count\": data.count\n        };\n        localStorage.setItem(\"items\", JSON.stringify(items));\n        break;\n      }\n    }\n    setData({\n      name: '',\n      isNameValid: false,\n      price: '',\n      isPriceValid: false,\n      img: '',\n      isImgValid: false,\n      count: '',\n      isCountValid: false\n    });\n  };\n  if (!props.show) {\n    return null;\n  } else {\n    switch (props.action) {\n      case ADD_ITEM:\n        {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"item_form\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form_wrapp\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form_content\",\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  placeholder: \"\\u041D\\u0430\\u0437\\u0432\\u0430\\u043D\\u0438\\u0435\",\n                  ref: addItemNameRef,\n                  onChange: () => {\n                    let value = addItemNameRef.current.value;\n                    if (validateStringValue(value)) {\n                      data.name = value;\n                      data.isNameValid = true;\n                    } else {\n                      data.isNameValid = false;\n                    }\n                    checkButtonForValidate();\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 121,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  placeholder: \"\\u0426\\u0435\\u043D\\u0430\",\n                  ref: addItemPriceRef,\n                  onChange: () => {\n                    let value = addItemPriceRef.current.value;\n                    if (validateIntValue(value)) {\n                      data.price = value;\n                      data.isPriceValid = true;\n                    } else {\n                      data.isPriceValid = false;\n                    }\n                    checkButtonForValidate();\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 137,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  placeholder: \"\\u0421\\u0441\\u044B\\u043B\\u043A\\u0430 \\u043D\\u0430 \\u0444\\u043E\\u0442\\u043E\",\n                  ref: addItemImgRef,\n                  onChange: () => {\n                    let value = addItemImgRef.current.value;\n                    if (validateUrl(value)) {\n                      data.img = value;\n                      data.isImgValid = true;\n                    } else {\n                      data.isImgValid = false;\n                    }\n                    checkButtonForValidate();\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 153,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  placeholder: \"\\u041A\\u043E\\u043B\\u0438\\u0447\\u0435\\u0441\\u0442\\u0432\\u043E\",\n                  ref: addItemCountRef,\n                  onChange: () => {\n                    let value = addItemCountRef.current.value;\n                    if (validateIntValue(value)) {\n                      data.count = value;\n                      data.isCountValid = true;\n                    } else {\n                      data.isCountValid = false;\n                    }\n                    checkButtonForValidate();\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 169,\n                  columnNumber: 33\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 120,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form_buttons\",\n                children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                  disabled: disabled,\n                  onClick: () => {\n                    addItem();\n                    setDisabled(true);\n                    props.onClose();\n                  },\n                  children: \"\\u0414\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 186,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: props.onClose,\n                  children: \"\\u041E\\u0442\\u043C\\u0435\\u043D\\u0430\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 196,\n                  columnNumber: 33\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 185,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 119,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 21\n          }, this);\n        }\n      case UPDATE_ITEM:\n        {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"item_form\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form_wrapp\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form_content\",\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  placeholder: \"\\u041D\\u0430\\u0437\\u0432\\u0430\\u043D\\u0438\\u0435\",\n                  ref: addItemNameRef,\n                  onChange: () => {\n                    let value = addItemNameRef.current.value;\n                    if (validateStringValue(value)) {\n                      data.name = value;\n                      data.isNameValid = true;\n                    } else {\n                      data.isNameValid = false;\n                    }\n                    checkButtonForValidate();\n                  },\n                  onClick: () => {\n                    if (addItemNameRef.current.value === '') {\n                      addItemNameRef.current.value = items[props.id].name;\n                      if (validateStringValue(addItemNameRef.current.value)) {\n                        data.name = addItemNameRef.current.value;\n                        data.isNameValid = true;\n                      }\n                    }\n                    checkButtonForValidate();\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 208,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  placeholder: \"\\u0426\\u0435\\u043D\\u0430\",\n                  ref: addItemPriceRef,\n                  onChange: () => {\n                    let value = addItemPriceRef.current.value;\n                    if (validateIntValue(value)) {\n                      data.price = value;\n                      data.isPriceValid = true;\n                    } else {\n                      data.isPriceValid = false;\n                    }\n                    checkButtonForValidate();\n                  },\n                  onClick: () => {\n                    if (addItemPriceRef.current.value === '') {\n                      addItemPriceRef.current.value = items[props.id].price;\n                      if (validateIntValue(addItemPriceRef.current.value)) {\n                        data.price = addItemPriceRef.current.value;\n                        data.isPriceValid = true;\n                      }\n                    }\n                    checkButtonForValidate();\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 234,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  placeholder: \"\\u0421\\u0441\\u044B\\u043B\\u043A\\u0430 \\u043D\\u0430 \\u0444\\u043E\\u0442\\u043E\",\n                  ref: addItemImgRef,\n                  onChange: () => {\n                    let value = addItemImgRef.current.value;\n                    if (validateUrl(value)) {\n                      data.img = value;\n                      data.isImgValid = true;\n                    } else {\n                      data.isImgValid = false;\n                    }\n                    checkButtonForValidate();\n                  },\n                  onClick: () => {\n                    if (addItemImgRef.current.value === '') {\n                      addItemImgRef.current.value = items[props.id].img;\n                      if (validateUrl(addItemImgRef.current.value)) {\n                        data.img = addItemImgRef.current.value;\n                        data.isImgValid = true;\n                      }\n                    }\n                    checkButtonForValidate();\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 260,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  placeholder: \"\\u041A\\u043E\\u043B\\u0438\\u0447\\u0435\\u0441\\u0442\\u0432\\u043E\",\n                  ref: addItemCountRef,\n                  onChange: () => {\n                    var value = addItemCountRef.current.value;\n                    if (validateIntValue(value)) {\n                      data.count = value;\n                      data.isCountValid = true;\n                    } else {\n                      data.isCountValid = false;\n                    }\n                    checkButtonForValidate();\n                  },\n                  onClick: () => {\n                    if (addItemCountRef.current.value === '') {\n                      addItemCountRef.current.value = items[props.id].count;\n                      if (validateIntValue(addItemCountRef.current.value)) {\n                        data.count = addItemCountRef.current.value;\n                        data.isCountValid = true;\n                      }\n                    }\n                    checkButtonForValidate();\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 286,\n                  columnNumber: 33\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 207,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form_buttons\",\n                children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                  disabled: disabled,\n                  onClick: () => {\n                    updateItem(props.id);\n                    setDisabled(true);\n                    props.onClose();\n                  },\n                  children: \"\\u041F\\u043E\\u0434\\u0442\\u0432\\u0435\\u0440\\u0434\\u0438\\u0442\\u044C\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 313,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: props.onClose,\n                  children: \"\\u041E\\u0442\\u043C\\u0435\\u043D\\u0430\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 323,\n                  columnNumber: 33\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 312,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 206,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 205,\n            columnNumber: 21\n          }, this);\n        }\n      case DELETE_ITEM:\n        {\n          let onClickFunc = () => {\n            props.deleteItem();\n            props.onClose();\n          };\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"item_form\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form_wrapp\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form_content\",\n                children: \"\\u0412\\u044B \\u0442\\u043E\\u0447\\u043D\\u043E \\u0445\\u043E\\u0442\\u0438\\u0442\\u0435 \\u0443\\u0434\\u0430\\u043B\\u0438\\u0442\\u044C?\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 341,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form_buttons\",\n                children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: onClickFunc,\n                  children: \"\\u0423\\u0434\\u0430\\u043B\\u0438\\u0442\\u044C\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 345,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: props.onClose,\n                  children: \"\\u041E\\u0442\\u043C\\u0435\\u043D\\u0430\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 350,\n                  columnNumber: 33\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 344,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 340,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 339,\n            columnNumber: 21\n          }, this);\n        }\n      default:\n        {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            children: \"oops\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 361,\n            columnNumber: 21\n          }, this);\n        }\n    }\n  }\n};\n_s(ItemForm, \"9KE0rzMZ6VMdXWwYBPI2diUUH5M=\");\n_c = ItemForm;\nconst CardArea = props => {\n  _s2();\n  const [show, setShow] = useState(false);\n  const [action, setAction] = useState();\n  const HIGHLIGHTVALUE = '0px 0px 8px 8px rgba(255, 157, 0, 0.2)';\n  const rectRef = /*#__PURE__*/createRef();\n  const [highlightItem, setHighlightItem] = useState({\n    id: 0,\n    boxShadow: 'none',\n    isActive: false\n  });\n  const rectStyle = {\n    boxShadow: `${highlightItem.boxShadow}`\n  };\n  const changeHighlightOnClick = valueId => {\n    if (highlightItem.boxShadow === 'none' && !highlightItem.isActive) {\n      setHighlightItem({\n        id: valueId,\n        boxShadow: HIGHLIGHTVALUE,\n        isActive: true\n      });\n    }\n    if (highlightItem.boxShadow !== 'none' && highlightItem.isActive) {\n      setHighlightItem({\n        id: valueId,\n        boxShadow: 'none',\n        isActive: false\n      });\n    }\n  };\n  let deleteItem = id => {\n    let state = JSON.parse(localStorage.getItem(\"items\"));\n    for (let i = 0; i < state.length; i++) {\n      if (state[i].id === id) {\n        state.splice(i, 1);\n        break;\n      }\n    }\n    localStorage.setItem(\"items\", JSON.stringify(state));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: rectRef,\n    style: rectStyle,\n    className: \"rect\",\n    onClick: () => {\n      changeHighlightOnClick(props.id);\n    },\n    children: [/*#__PURE__*/_jsxDEV(ClickAwayListener, {\n      onClickAway: () => {\n        setHighlightItem({\n          id: props.id,\n          boxShadow: 'none',\n          isActive: false\n        });\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"grid_wrapp\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"img\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: `${props.img}`,\n            alt: \"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 432,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 431,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text_content\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"title\",\n            children: [\"\\u041D\\u0430\\u0437\\u0432\\u0430\\u043D\\u0438\\u0435: \", props.name]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 435,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"price\",\n            children: [\"\\u0426\\u0435\\u043D\\u0430: \", props.price]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 438,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"count\",\n            children: [\"\\u041A\\u043E\\u043B\\u0438\\u0447\\u0435\\u0441\\u0442\\u0432\\u043E: \", props.count]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 441,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 434,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"item_buttons\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"item_butt\",\n            onClick: () => {\n              setShow(true);\n              setAction(UPDATE_ITEM);\n            },\n            children: \"\\u041E\\u0431\\u043D\\u043E\\u0432\\u0438\\u0442\\u044C\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 446,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"item_butt\",\n            onClick: () => {\n              setShow(true);\n              setAction(DELETE_ITEM);\n            },\n            children: \"\\u0423\\u0434\\u0430\\u043B\\u0438\\u0442\\u044C\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 454,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 445,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 430,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 423,\n      columnNumber: 21\n    }, this), /*#__PURE__*/_jsxDEV(ItemForm, {\n      action: action,\n      show: show,\n      id: props.id,\n      deleteItem: () => {\n        deleteItem(props.id);\n      },\n      onClose: () => {\n        setShow(false);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 465,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 415,\n    columnNumber: 13\n  }, this);\n};\n_s2(CardArea, \"uO/MqltXXqFb0tCJ0cmG3EuMxNs=\");\n_c2 = CardArea;\nconst Cards = () => {\n  _s3();\n  let state = JSON.parse(localStorage.getItem(\"items\"));\n  const [show, setShow] = useState(false);\n  const [action, setAction] = useState();\n  let [itemsData, setItemsData] = useState([]);\n  useEffect(() => {\n    setTimeout(() => {\n      setItemsData(JSON.parse(localStorage.getItem(\"items\")).map(item => /*#__PURE__*/_jsxDEV(CardArea, {\n        id: item.id,\n        img: item.img,\n        name: item.name,\n        price: item.price,\n        count: item.count\n      }, item.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 485,\n        columnNumber: 17\n      }, this)));\n    }, 1);\n  }, [state]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"board\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"wrapper\",\n      children: [itemsData, /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"button\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 501,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(ItemForm, {\n        action: action,\n        show: show,\n        onClose: () => {\n          setShow(false);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 504,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 499,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"add\",\n      onClick: () => {\n        setShow(true);\n        setAction(ADD_ITEM);\n      },\n      children: \"\\u0414\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 510,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 498,\n    columnNumber: 9\n  }, this);\n};\n_s3(Cards, \"PPF+LBfQQnaUOEgSZo/QyTnVvVg=\");\n_c3 = Cards;\nexport default Cards;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"ItemForm\");\n$RefreshReg$(_c2, \"CardArea\");\n$RefreshReg$(_c3, \"Cards\");","map":{"version":3,"names":["React","createRef","useEffect","useState","ClickAwayListener","dataJSON","getData","localStorage","removeItem","setItem","JSON","stringify","ADD_ITEM","UPDATE_ITEM","DELETE_ITEM","ItemForm","props","items","parse","getItem","addItemNameRef","addItemPriceRef","addItemImgRef","addItemCountRef","disabled","setDisabled","data","setData","name","isNameValid","price","isPriceValid","img","isImgValid","count","isCountValid","getId","setId","length","validateStringValue","value","validateIntValue","parseInt","Number","isInteger","validateUrl","httpRegex","console","log","test","checkButtonForValidate","addItem","push","updateItem","id","i","show","action","current","onClose","onClickFunc","deleteItem","CardArea","setShow","setAction","HIGHLIGHTVALUE","rectRef","highlightItem","setHighlightItem","boxShadow","isActive","rectStyle","changeHighlightOnClick","valueId","state","splice","Cards","itemsData","setItemsData","setTimeout","map","item"],"sources":["D:/git/SVCHVS-lab-11/src/components/cards/Cards.js"],"sourcesContent":["import './Cards.css'\nimport React, { createRef, useEffect, useState } from 'react'\nimport ClickAwayListener from '@mui/base/ClickAwayListener';\nimport dataJSON from \"./items.json\";\n\n let getData = () => {\n     localStorage.removeItem(\"items\")\n     localStorage.setItem(\"items\", JSON.stringify(dataJSON))\n }\n\n getData()\n\nconst ADD_ITEM = 'ADD-ITEM'\nconst UPDATE_ITEM = 'UPDATE-ITEM'\nconst DELETE_ITEM = 'DELETE-ITEM'\n\nconst ItemForm = (props) => {\n\n    let items = JSON.parse(localStorage.getItem(\"items\"))\n    let addItemNameRef = React.createRef()\n    let addItemPriceRef = React.createRef()\n    let addItemImgRef = React.createRef()\n    let addItemCountRef = React.createRef()\n\n    const [disabled, setDisabled] = useState(true)\n\n    const [data, setData] = useState({\n        name: '',\n        isNameValid: false,\n        price: '',\n        isPriceValid: false,\n        img: '',\n        isImgValid: false,\n        count: '',\n        isCountValid: false\n    })\n    const [getId, setId] = useState(items.length)\n\n    let validateStringValue = (value) => {\n        return typeof value === \"string\" && value !== \"\";\n    }\n\n    let validateIntValue = (value) => {\n        value = parseInt(value)\n        return Number.isInteger(value);\n    }\n\n    let validateUrl = (value) => {\n        let httpRegex = /^https?:\\/\\/(?:www\\.)?[-a-zA-Z0-9@:%._\\+~#=]{1,256}\\.[a-zA-Z0-9()]{1,6}\\b(?:[-a-zA-Z0-9()@:%_\\+.~#?&\\/=]*)$/; console.log(httpRegex.test(value))\n        return httpRegex.test(value);\n    }\n    let checkButtonForValidate = () => {\n        if (data.isNameValid && data.isPriceValid\n            && data.isCountValid && data.isImgValid) {\n            setDisabled(false)\n        }\n        else {\n            setDisabled(true)\n        }\n    }\n\n    let addItem = () => {\n        setId(getId => getId + 1)\n        items.push({\n            \"id\": getId,\n            \"name\": `${data.name}`,\n            \"price\": data.price,\n            \"img\": `${data.img}`,\n            \"count\": data.count\n        })\n        localStorage.setItem(\"items\", JSON.stringify(items))\n        setData({\n            name: '',\n            isNameValid: false,\n            price: '',\n            isPriceValid: false,\n            img: '',\n            isImgValid: false,\n            count: '',\n            isCountValid: false\n        })\n    }\n\n    let updateItem = (id) => {\n        for (let i = 0; i < items.length; i++) {\n            if (items[i].id === id) {\n                items[i] = {\n                    \"id\": id,\n                    \"name\": `${data.name}`,\n                    \"price\": data.price,\n                    \"img\": `${data.img}`,\n                    \"count\": data.count\n                }\n                localStorage.setItem(\"items\", JSON.stringify(items))\n                break;\n            }\n        }\n        setData({\n            name: '',\n            isNameValid: false,\n            price: '',\n            isPriceValid: false,\n            img: '',\n            isImgValid: false,\n            count: '',\n            isCountValid: false\n        })\n    }\n\n\n    if (!props.show) {\n        return null;\n    }\n    else {\n        switch (props.action) {\n            case ADD_ITEM: {\n                return (\n                    <div className='item_form'>\n                        <div className='form_wrapp'>\n                            <div className='form_content'>\n                                <input type=\"text\"\n                                    placeholder='Название'\n                                    ref={addItemNameRef}\n                                    onChange={() => {\n                                        let value = addItemNameRef.current.value\n                                        if (validateStringValue(value)) {\n                                            data.name = value\n                                            data.isNameValid = true\n                                        }\n                                        else {\n                                            data.isNameValid = false\n                                        }\n                                        checkButtonForValidate()\n                                    }}\n                                />\n\n                                <input type=\"text\"\n                                    placeholder='Цена'\n                                    ref={addItemPriceRef}\n                                    onChange={() => {\n                                        let value = addItemPriceRef.current.value\n                                        if (validateIntValue(value)) {\n                                            data.price = value\n                                            data.isPriceValid = true\n                                        }\n                                        else {\n                                            data.isPriceValid = false\n                                        }\n                                        checkButtonForValidate()\n                                    }}\n                                />\n\n                                <input type=\"text\"\n                                    placeholder='Ссылка на фото'\n                                    ref={addItemImgRef}\n                                    onChange={() => {\n                                        let value = addItemImgRef.current.value\n                                        if (validateUrl(value)) {\n                                            data.img = value\n                                            data.isImgValid = true\n                                        }\n                                        else {\n                                            data.isImgValid = false\n                                        }\n                                        checkButtonForValidate()\n                                    }}\n                                />\n\n                                <input type=\"text\"\n                                    placeholder='Количество'\n                                    ref={addItemCountRef}\n                                    onChange={() => {\n                                        let value = addItemCountRef.current.value\n                                        if (validateIntValue(value)) {\n                                            data.count = value\n                                            data.isCountValid = true\n                                        }\n                                        else {\n                                            data.isCountValid = false\n                                        }\n                                        checkButtonForValidate()\n                                    }}\n                                />\n                            </div>\n                            <div className='form_buttons'>\n                                <button\n                                    disabled={disabled}\n                                    onClick={() => {\n                                        addItem()\n                                        setDisabled(true)\n                                        props.onClose()\n                                    }}\n                                >\n                                    Добавить\n                                </button>\n                                <button onClick={props.onClose}>Отмена</button>\n                            </div>\n                        </div>\n                    </div>\n                )\n            }\n\n            case UPDATE_ITEM: {\n                return (\n                    <div className='item_form'>\n                        <div className='form_wrapp'>\n                            <div className='form_content'>\n                                <input type=\"text\"\n                                    placeholder='Название'\n                                    ref={addItemNameRef}\n                                    onChange={() => {\n                                        let value = addItemNameRef.current.value\n                                        if (validateStringValue(value)) {\n                                            data.name = value\n                                            data.isNameValid = true\n                                        }\n                                        else {\n                                            data.isNameValid = false\n                                        }\n                                        checkButtonForValidate()\n                                    }}\n                                    onClick={() => {\n                                        if (addItemNameRef.current.value === '') {\n                                            addItemNameRef.current.value = items[props.id].name\n                                            if (validateStringValue(addItemNameRef.current.value)) {\n                                                data.name = addItemNameRef.current.value\n                                                data.isNameValid = true\n                                            }\n                                        }\n                                        checkButtonForValidate()\n                                    }}\n                                />\n\n                                <input type=\"text\"\n                                    placeholder='Цена'\n                                    ref={addItemPriceRef}\n                                    onChange={() => {\n                                        let value = addItemPriceRef.current.value\n                                        if (validateIntValue(value)) {\n                                            data.price = value\n                                            data.isPriceValid = true\n                                        }\n                                        else {\n                                            data.isPriceValid = false\n                                        }\n                                        checkButtonForValidate()\n                                    }}\n                                    onClick={() => {\n                                        if (addItemPriceRef.current.value === '') {\n                                            addItemPriceRef.current.value = items[props.id].price\n                                            if (validateIntValue(addItemPriceRef.current.value)) {\n                                                data.price = addItemPriceRef.current.value\n                                                data.isPriceValid = true\n                                            }\n                                        }\n                                        checkButtonForValidate()\n                                    }}\n                                />\n\n                                <input type=\"text\"\n                                    placeholder='Ссылка на фото'\n                                    ref={addItemImgRef}\n                                    onChange={() => {\n                                        let value = addItemImgRef.current.value\n                                        if (validateUrl(value)) {\n                                            data.img = value\n                                            data.isImgValid = true\n                                        }\n                                        else {\n                                            data.isImgValid = false\n                                        }\n                                        checkButtonForValidate()\n                                    }}\n                                    onClick={() => {\n                                        if (addItemImgRef.current.value === '') {\n                                            addItemImgRef.current.value = items[props.id].img\n                                            if (validateUrl(addItemImgRef.current.value)) {\n                                                data.img = addItemImgRef.current.value\n                                                data.isImgValid = true\n                                            }\n                                        }\n                                        checkButtonForValidate()\n                                    }}\n                                />\n\n                                <input type=\"text\"\n                                    placeholder='Количество'\n                                    ref={addItemCountRef}\n                                    onChange={() => {\n                                        var value = addItemCountRef.current.value\n                                        if (validateIntValue(value)) {\n                                            data.count = value\n                                            data.isCountValid = true\n                                        }\n                                        else {\n                                            data.isCountValid = false\n                                        }\n                                        checkButtonForValidate()\n                                    }}\n                                    onClick={() => {\n                                        if (addItemCountRef.current.value === '') {\n                                            addItemCountRef.current.value = items[props.id].count\n                                            if (validateIntValue(addItemCountRef.current.value)) {\n                                                data.count = addItemCountRef.current.value\n                                                data.isCountValid = true\n                                            }\n                                        }\n                                        checkButtonForValidate()\n                                    }}\n                                />\n                            </div>\n                            <div className='form_buttons'>\n                                <button\n                                    disabled={disabled}\n                                    onClick={() => {\n                                        updateItem(props.id)\n                                        setDisabled(true)\n                                        props.onClose()\n                                    }}\n                                >\n                                    Подтвердить\n                                </button>\n                                <button onClick={props.onClose}>\n                                    Отмена\n                                </button>\n                            </div>\n                        </div>\n                    </div>\n                )\n            }\n\n            case DELETE_ITEM: {\n\n                let onClickFunc = () => {\n                    props.deleteItem()\n                    props.onClose()\n                }\n                return (\n                    <div className='item_form'>\n                        <div className='form_wrapp'>\n                            <div className='form_content'>\n                              Вы точно хотите удалить?\n                            </div>\n                            <div className='form_buttons'>\n                                <button\n                                    onClick={onClickFunc}\n                                >\n                                    Удалить\n                                </button>\n                                <button onClick={props.onClose}>\n                                    Отмена\n                                </button>\n                            </div>\n                        </div>\n                    </div>\n                )\n            }\n\n            default: {\n                return (\n                    <div>\n                        oops\n                    </div>\n                )\n            }\n        }\n    }\n}\n\nconst CardArea = (props) => {\n    const [show, setShow] = useState(false)\n\n    const [action, setAction] = useState()\n\n    const HIGHLIGHTVALUE = '0px 0px 8px 8px rgba(255, 157, 0, 0.2)'\n    const rectRef = createRef()\n\n    const [highlightItem, setHighlightItem] = useState({\n        id: 0,\n        boxShadow: 'none',\n        isActive: false\n    })\n    const rectStyle = { boxShadow: `${highlightItem.boxShadow}` }\n\n    const changeHighlightOnClick = (valueId) => {\n\n        if (highlightItem.boxShadow === 'none' && !highlightItem.isActive) {\n            setHighlightItem({\n                id: valueId,\n                boxShadow: HIGHLIGHTVALUE,\n                isActive: true\n            })\n        }\n        if (highlightItem.boxShadow !== 'none' && highlightItem.isActive) {\n            setHighlightItem({\n                id: valueId,\n                boxShadow: 'none',\n                isActive: false\n            })\n        }\n    }\n\n    let deleteItem = (id) => {\n        let state = JSON.parse(localStorage.getItem(\"items\"))\n        for (let i = 0; i < state.length; i++) {\n            if (state[i].id === id) {\n                state.splice(i, 1)\n                break;\n            }\n        }\n        localStorage.setItem(\"items\", JSON.stringify(state))\n    }\n\n    return (\n            <div\n                ref={rectRef}\n                style={rectStyle}\n                className='rect'\n                onClick={() => {\n                    changeHighlightOnClick(props.id)\n                }}\n            >\n                    <ClickAwayListener onClickAway={() => {\n                        setHighlightItem({\n                            id: props.id,\n                            boxShadow: 'none',\n                            isActive: false\n                        })\n                    }}>\n                    <div className='grid_wrapp'>\n                        <div className='img'>\n                            <img src={`${props.img}`} alt=\"\" />\n                        </div>\n                        <div className='text_content'>\n                            <div className='title'>\n                                Название: {props.name}\n                            </div>\n                            <div className='price'>\n                                Цена: {props.price}\n                            </div>\n                            <div className='count'>\n                                Количество: {props.count}\n                            </div>\n                        </div>\n                        <div className='item_buttons'>\n                            <button className='item_butt'\n                                onClick={() => {\n                                    setShow(true)\n                                    setAction(UPDATE_ITEM)\n                                }}\n                            >\n                                Обновить\n                            </button>\n                            <button className='item_butt'\n                                onClick={() => {\n                                    setShow(true)\n                                    setAction(DELETE_ITEM)\n                                }}\n                            >\n                                Удалить\n                            </button>\n                        </div>\n                    </div>\n            </ClickAwayListener>\n            <ItemForm\n                action={action}\n                show={show}\n                id={props.id}\n                deleteItem={() => { deleteItem(props.id) }}\n                onClose={() => { setShow(false) }}\n            />\n        </div>\n    )\n}\n\nconst Cards = () => {\n    let state = JSON.parse(localStorage.getItem(\"items\"))\n    const [show, setShow] = useState(false)\n    const [action, setAction] = useState()\n\n    let [itemsData, setItemsData] = useState([])\n    useEffect(() => {\n        setTimeout(() => {\n            setItemsData(JSON.parse(localStorage.getItem(\"items\")).map((item) =>\n                <CardArea\n                    key={item.id}\n                    id={item.id}\n                    img={item.img}\n                    name={item.name}\n                    price={item.price}\n                    count={item.count}\n                />\n            ))\n        }, 1)\n    }, [state])\n\n    return (\n        <div className=\"board\">\n        <div className=\"wrapper\">\n            {itemsData}\n            <div className='button'>\n\n            </div>\n            <ItemForm\n                action={action}\n                show={show}\n                onClose={() => { setShow(false) }}\n            />\n        </div>\n            <button className=\"add\"\n                onClick={() => {\n                    setShow(true)\n                    setAction(ADD_ITEM)\n                }}\n            >\n                Добавить\n            </button>\n        </div>\n    )\n}\n\nexport default Cards"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}